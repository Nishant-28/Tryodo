-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.brands (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name character varying NOT NULL UNIQUE,
  logo_url text,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT brands_pkey PRIMARY KEY (id)
);
CREATE TABLE public.cart_items (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  cart_id uuid NOT NULL,
  product_id uuid NOT NULL,
  quantity integer NOT NULL CHECK (quantity > 0),
  added_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT cart_items_pkey PRIMARY KEY (id),
  CONSTRAINT cart_items_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.vendor_products(id),
  CONSTRAINT cart_items_cart_id_fkey FOREIGN KEY (cart_id) REFERENCES public.shopping_carts(id)
);
CREATE TABLE public.categories (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name character varying NOT NULL UNIQUE,
  description text,
  icon character varying,
  gradient character varying,
  sort_order integer DEFAULT 0,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT categories_pkey PRIMARY KEY (id)
);
CREATE TABLE public.category_qualities (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  category_id uuid NOT NULL,
  quality_name character varying NOT NULL,
  quality_description text,
  specifications jsonb,
  sort_order integer DEFAULT 0,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT category_qualities_pkey PRIMARY KEY (id),
  CONSTRAINT category_qualities_category_id_fkey FOREIGN KEY (category_id) REFERENCES public.categories(id)
);
CREATE TABLE public.commission_analytics (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  vendor_id uuid NOT NULL,
  quality_id uuid NOT NULL,
  period_start timestamp with time zone NOT NULL,
  period_end timestamp with time zone NOT NULL,
  total_sales numeric DEFAULT 0,
  total_commission numeric DEFAULT 0,
  total_upside numeric DEFAULT 0,
  total_orders integer DEFAULT 0,
  average_commission_rate numeric DEFAULT 0,
  average_upside_rate numeric DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT commission_analytics_pkey PRIMARY KEY (id),
  CONSTRAINT commission_analytics_vendor_id_fkey FOREIGN KEY (vendor_id) REFERENCES public.vendors(id),
  CONSTRAINT commission_analytics_quality_id_fkey FOREIGN KEY (quality_id) REFERENCES public.category_qualities(id)
);
CREATE TABLE public.commission_rules (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  category_id uuid NOT NULL,
  commission_percentage numeric NOT NULL CHECK (commission_percentage >= 0::numeric AND commission_percentage <= 100::numeric),
  minimum_commission numeric DEFAULT 0,
  maximum_commission numeric,
  is_active boolean DEFAULT true,
  effective_from timestamp with time zone DEFAULT now(),
  effective_until timestamp with time zone,
  created_by uuid,
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  quality_id uuid,
  smartphone_model_id uuid,
  CONSTRAINT commission_rules_pkey PRIMARY KEY (id),
  CONSTRAINT commission_rules_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.profiles(id),
  CONSTRAINT commission_rules_category_id_fkey FOREIGN KEY (category_id) REFERENCES public.categories(id),
  CONSTRAINT commission_rules_quality_id_fkey FOREIGN KEY (quality_id) REFERENCES public.category_qualities(id),
  CONSTRAINT commission_rules_smartphone_model_id_fkey FOREIGN KEY (smartphone_model_id) REFERENCES public.smartphone_models(id)
);
CREATE TABLE public.customer_addresses (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  customer_id uuid NOT NULL,
  shop_name text NOT NULL,
  owner_name text NOT NULL,
  pincode character varying NOT NULL,
  address_box text NOT NULL,
  phone_number character varying NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT customer_addresses_pkey PRIMARY KEY (id),
  CONSTRAINT customer_addresses_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES public.customers(id)
);
CREATE TABLE public.customers (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  profile_id uuid NOT NULL UNIQUE,
  date_of_birth date,
  gender character varying CHECK (gender::text = ANY (ARRAY['male'::character varying, 'female'::character varying, 'other'::character varying]::text[])),
  total_orders integer DEFAULT 0,
  total_spent numeric DEFAULT 0,
  last_order_date timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT customers_pkey PRIMARY KEY (id),
  CONSTRAINT customers_profile_id_fkey FOREIGN KEY (profile_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.delivery_assignments (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  delivery_partner_id uuid NOT NULL,
  slot_id uuid,
  assigned_date date NOT NULL,
  sector_id uuid,
  max_orders integer DEFAULT 30,
  current_orders integer DEFAULT 0,
  status character varying DEFAULT 'assigned'::character varying CHECK (status::text = ANY (ARRAY['assigned'::character varying, 'active'::character varying, 'completed'::character varying, 'cancelled'::character varying]::text[])),
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT delivery_assignments_pkey PRIMARY KEY (id),
  CONSTRAINT delivery_assignments_sector_id_fkey FOREIGN KEY (sector_id) REFERENCES public.sectors(id),
  CONSTRAINT delivery_assignments_slot_id_fkey FOREIGN KEY (slot_id) REFERENCES public.delivery_slots(id)
);
CREATE TABLE public.delivery_day_end_summaries (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  delivery_partner_id uuid NOT NULL,
  summary_date date NOT NULL,
  total_cash_collected numeric NOT NULL DEFAULT 0,
  total_digital_collected numeric NOT NULL DEFAULT 0,
  total_amount numeric NOT NULL DEFAULT 0,
  summary_notes text,
  submitted_at timestamp with time zone NOT NULL DEFAULT now(),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT delivery_day_end_summaries_pkey PRIMARY KEY (id),
  CONSTRAINT delivery_day_end_summaries_delivery_partner_id_fkey FOREIGN KEY (delivery_partner_id) REFERENCES public.delivery_partners(id)
);
CREATE TABLE public.delivery_earnings (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  delivery_partner_order_id uuid NOT NULL,
  delivery_partner_id uuid NOT NULL,
  order_id uuid NOT NULL,
  base_delivery_fee numeric DEFAULT 0,
  distance_bonus numeric DEFAULT 0,
  time_bonus numeric DEFAULT 0,
  performance_bonus numeric DEFAULT 0,
  incentive_amount numeric DEFAULT 5.00,
  total_earning numeric NOT NULL,
  distance_km numeric,
  delivery_time_minutes integer,
  peak_time_multiplier numeric DEFAULT 1.0,
  earning_status character varying DEFAULT 'pending'::character varying CHECK (earning_status::text = ANY (ARRAY['pending'::character varying, 'confirmed'::character varying, 'paid'::character varying, 'cancelled'::character varying]::text[])),
  calculated_at timestamp with time zone DEFAULT now(),
  confirmed_at timestamp with time zone,
  paid_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT delivery_earnings_pkey PRIMARY KEY (id),
  CONSTRAINT delivery_earnings_order_id_fkey FOREIGN KEY (order_id) REFERENCES public.orders(id),
  CONSTRAINT delivery_earnings_delivery_partner_order_id_fkey FOREIGN KEY (delivery_partner_order_id) REFERENCES public.delivery_partner_orders(id),
  CONSTRAINT delivery_earnings_delivery_partner_id_fkey FOREIGN KEY (delivery_partner_id) REFERENCES public.delivery_partners(id)
);
CREATE TABLE public.delivery_partner_attendance (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  delivery_partner_id uuid,
  check_in timestamp with time zone NOT NULL,
  check_out timestamp with time zone,
  total_orders integer DEFAULT 0,
  total_earnings numeric DEFAULT 0.0,
  total_distance numeric DEFAULT 0.0,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT delivery_partner_attendance_pkey PRIMARY KEY (id),
  CONSTRAINT delivery_partner_attendance_delivery_partner_id_fkey FOREIGN KEY (delivery_partner_id) REFERENCES public.delivery_partners(id)
);
CREATE TABLE public.delivery_partner_documents (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  delivery_partner_id uuid,
  document_type character varying NOT NULL,
  document_number character varying,
  document_url text NOT NULL,
  is_verified boolean DEFAULT false,
  verified_by uuid,
  verification_date timestamp with time zone,
  expiry_date date,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT delivery_partner_documents_pkey PRIMARY KEY (id),
  CONSTRAINT delivery_partner_documents_verified_by_fkey FOREIGN KEY (verified_by) REFERENCES auth.users(id),
  CONSTRAINT delivery_partner_documents_delivery_partner_id_fkey FOREIGN KEY (delivery_partner_id) REFERENCES public.delivery_partners(id)
);
CREATE TABLE public.delivery_partner_earnings (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  delivery_partner_id uuid,
  order_id uuid,
  amount numeric NOT NULL,
  commission_rate numeric NOT NULL,
  commission_amount numeric NOT NULL,
  final_amount numeric NOT NULL,
  status character varying DEFAULT 'pending'::character varying,
  payment_date timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT delivery_partner_earnings_pkey PRIMARY KEY (id),
  CONSTRAINT delivery_partner_earnings_delivery_partner_id_fkey FOREIGN KEY (delivery_partner_id) REFERENCES public.delivery_partners(id),
  CONSTRAINT delivery_partner_earnings_order_id_fkey FOREIGN KEY (order_id) REFERENCES public.orders(id)
);
CREATE TABLE public.delivery_partner_orders (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  order_id uuid NOT NULL UNIQUE,
  delivery_partner_id uuid NOT NULL,
  status character varying NOT NULL DEFAULT 'assigned'::character varying,
  assigned_at timestamp with time zone DEFAULT now(),
  accepted_at timestamp with time zone,
  picked_up_at timestamp with time zone,
  delivered_at timestamp with time zone,
  cancelled_at timestamp with time zone,
  delivery_fee numeric DEFAULT 0,
  distance_km numeric,
  actual_delivery_time_minutes integer,
  pickup_instructions text,
  delivery_instructions text,
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  payment_collected boolean NOT NULL DEFAULT false,
  payment_collected_at timestamp with time zone,
  payment_collection_amount numeric DEFAULT 0,
  CONSTRAINT delivery_partner_orders_pkey PRIMARY KEY (id),
  CONSTRAINT delivery_partner_orders_delivery_partner_id_fkey FOREIGN KEY (delivery_partner_id) REFERENCES public.delivery_partners(id),
  CONSTRAINT delivery_partner_orders_order_id_fkey FOREIGN KEY (order_id) REFERENCES public.orders(id)
);
CREATE TABLE public.delivery_partner_stats (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  delivery_partner_id uuid NOT NULL UNIQUE,
  today_deliveries integer DEFAULT 0,
  week_deliveries integer DEFAULT 0,
  month_deliveries integer DEFAULT 0,
  total_deliveries integer DEFAULT 0,
  today_earnings numeric DEFAULT 0,
  week_earnings numeric DEFAULT 0,
  month_earnings numeric DEFAULT 0,
  total_earnings numeric DEFAULT 0,
  average_rating numeric DEFAULT 0.00,
  active_orders integer DEFAULT 0,
  last_delivery_at timestamp with time zone,
  stats_date date DEFAULT CURRENT_DATE,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT delivery_partner_stats_pkey PRIMARY KEY (id),
  CONSTRAINT delivery_partner_stats_delivery_partner_id_fkey FOREIGN KEY (delivery_partner_id) REFERENCES public.delivery_partners(id)
);
CREATE TABLE public.delivery_partner_wallets (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  delivery_partner_id uuid NOT NULL UNIQUE,
  pending_balance numeric DEFAULT 0,
  available_balance numeric DEFAULT 0,
  total_earned numeric DEFAULT 0,
  total_paid_out numeric DEFAULT 0,
  base_salary numeric DEFAULT 0,
  incentive_earnings numeric DEFAULT 0,
  bonus_earnings numeric DEFAULT 0,
  today_earnings numeric DEFAULT 0,
  week_earnings numeric DEFAULT 0,
  month_earnings numeric DEFAULT 0,
  today_deliveries integer DEFAULT 0,
  week_deliveries integer DEFAULT 0,
  month_deliveries integer DEFAULT 0,
  base_salary_amount numeric DEFAULT 15000,
  incentive_per_delivery numeric DEFAULT 5.00,
  minimum_payout_amount numeric DEFAULT 500,
  auto_payout_enabled boolean DEFAULT false,
  last_payout_date timestamp with time zone,
  last_delivery_date timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  total_collected numeric NOT NULL DEFAULT 0,
  cash_in_hand numeric NOT NULL DEFAULT 0,
  last_settlement_date date,
  CONSTRAINT delivery_partner_wallets_pkey PRIMARY KEY (id),
  CONSTRAINT delivery_partner_wallets_delivery_partner_id_fkey FOREIGN KEY (delivery_partner_id) REFERENCES public.delivery_partners(id)
);
CREATE TABLE public.delivery_partner_zone_assignments (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  delivery_partner_id uuid NOT NULL,
  zone_id uuid NOT NULL,
  slot_id uuid NOT NULL,
  assigned_date date NOT NULL DEFAULT CURRENT_DATE,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT delivery_partner_zone_assignments_pkey PRIMARY KEY (id),
  CONSTRAINT delivery_partner_zone_assignments_delivery_partner_id_fkey FOREIGN KEY (delivery_partner_id) REFERENCES public.delivery_partners(id),
  CONSTRAINT delivery_partner_zone_assignments_zone_id_fkey FOREIGN KEY (zone_id) REFERENCES public.delivery_zones(id),
  CONSTRAINT delivery_partner_zone_assignments_slot_id_fkey FOREIGN KEY (slot_id) REFERENCES public.delivery_slots(id)
);
CREATE TABLE public.delivery_partners (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  profile_id uuid NOT NULL UNIQUE,
  license_number character varying NOT NULL,
  vehicle_type character varying NOT NULL CHECK (vehicle_type::text = ANY (ARRAY['bike'::character varying, 'scooter'::character varying, 'bicycle'::character varying, 'car'::character varying, 'auto'::character varying]::text[])),
  vehicle_number character varying NOT NULL,
  aadhar_number character varying NOT NULL,
  pan_number character varying,
  bank_account_number character varying,
  bank_ifsc_code character varying,
  emergency_contact_name character varying,
  emergency_contact_phone character varying,
  current_latitude numeric,
  current_longitude numeric,
  assigned_pincodes ARRAY DEFAULT '{}'::text[],
  is_available boolean DEFAULT true,
  is_active boolean DEFAULT true,
  is_verified boolean DEFAULT false,
  rating numeric DEFAULT 0.00 CHECK (rating >= 0::numeric AND rating <= 5::numeric),
  total_reviews integer DEFAULT 0,
  total_deliveries integer DEFAULT 0,
  successful_deliveries integer DEFAULT 0,
  cancelled_deliveries integer DEFAULT 0,
  average_delivery_time_minutes integer DEFAULT 0,
  joined_at timestamp with time zone DEFAULT now(),
  last_location_update timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT delivery_partners_pkey PRIMARY KEY (id),
  CONSTRAINT delivery_partners_profile_id_fkey FOREIGN KEY (profile_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.delivery_payment_collections (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  delivery_partner_id uuid NOT NULL,
  order_id uuid NOT NULL,
  amount_collected numeric NOT NULL DEFAULT 0,
  payment_method text NOT NULL CHECK (payment_method = ANY (ARRAY['cash'::text, 'card'::text, 'upi'::text])),
  collection_notes text,
  collected_at timestamp with time zone NOT NULL DEFAULT now(),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT delivery_payment_collections_pkey PRIMARY KEY (id),
  CONSTRAINT delivery_payment_collections_delivery_partner_id_fkey FOREIGN KEY (delivery_partner_id) REFERENCES public.delivery_partners(id),
  CONSTRAINT delivery_payment_collections_order_id_fkey FOREIGN KEY (order_id) REFERENCES public.orders(id)
);
CREATE TABLE public.delivery_sectors (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name character varying NOT NULL,
  description text,
  area_polygon USER-DEFINED,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT delivery_sectors_pkey PRIMARY KEY (id)
);
CREATE TABLE public.delivery_slots (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  sector_id uuid,
  slot_name character varying NOT NULL,
  start_time time without time zone NOT NULL,
  end_time time without time zone NOT NULL,
  cutoff_time time without time zone NOT NULL,
  pickup_delay_minutes integer DEFAULT 45,
  max_orders integer DEFAULT 50,
  is_active boolean DEFAULT true,
  day_of_week ARRAY,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT delivery_slots_pkey PRIMARY KEY (id),
  CONSTRAINT delivery_slots_sector_id_fkey FOREIGN KEY (sector_id) REFERENCES public.sectors(id)
);
CREATE TABLE public.delivery_zones (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name character varying NOT NULL,
  pincodes ARRAY NOT NULL,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT delivery_zones_pkey PRIMARY KEY (id)
);
CREATE TABLE public.generic_products (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  category_id uuid NOT NULL,
  name character varying NOT NULL,
  description text,
  specifications jsonb,
  official_images ARRAY,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT generic_products_pkey PRIMARY KEY (id),
  CONSTRAINT generic_products_category_id_fkey FOREIGN KEY (category_id) REFERENCES public.categories(id)
);
CREATE TABLE public.model_category_qualities (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  smartphone_model_id uuid NOT NULL,
  category_id uuid NOT NULL,
  category_quality_id uuid NOT NULL,
  additional_specs jsonb,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT model_category_qualities_pkey PRIMARY KEY (id),
  CONSTRAINT model_category_qualities_category_quality_id_fkey FOREIGN KEY (category_quality_id) REFERENCES public.category_qualities(id),
  CONSTRAINT model_category_qualities_smartphone_model_id_fkey FOREIGN KEY (smartphone_model_id) REFERENCES public.smartphone_models(id),
  CONSTRAINT model_category_qualities_category_id_fkey FOREIGN KEY (category_id) REFERENCES public.categories(id)
);
CREATE TABLE public.order_deliveries (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  order_id uuid NOT NULL,
  delivery_partner_id uuid NOT NULL,
  delivered_at timestamp with time zone NOT NULL DEFAULT now(),
  delivery_notes text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  delivery_status character varying NOT NULL DEFAULT 'delivered'::character varying,
  delivery_time timestamp with time zone,
  CONSTRAINT order_deliveries_pkey PRIMARY KEY (id),
  CONSTRAINT order_deliveries_order_id_fkey FOREIGN KEY (order_id) REFERENCES public.orders(id),
  CONSTRAINT order_deliveries_delivery_partner_id_fkey FOREIGN KEY (delivery_partner_id) REFERENCES public.delivery_partners(id)
);
CREATE TABLE public.order_items (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  order_id uuid NOT NULL,
  vendor_id uuid NOT NULL,
  vendor_product_id uuid,
  vendor_generic_product_id uuid,
  product_name character varying NOT NULL,
  product_description text,
  category_name character varying,
  quality_type_name character varying,
  unit_price numeric NOT NULL,
  quantity integer NOT NULL DEFAULT 1,
  line_total numeric NOT NULL,
  item_status character varying NOT NULL DEFAULT 'pending'::character varying,
  vendor_confirmed_at timestamp with time zone,
  vendor_notes text,
  picked_up_at timestamp with time zone,
  pickup_confirmed_by character varying,
  warranty_months integer DEFAULT 0,
  estimated_delivery_days integer DEFAULT 3,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  smartphone_model_id uuid,
  CONSTRAINT order_items_pkey PRIMARY KEY (id),
  CONSTRAINT order_items_order_id_fkey FOREIGN KEY (order_id) REFERENCES public.orders(id),
  CONSTRAINT order_items_vendor_id_fkey FOREIGN KEY (vendor_id) REFERENCES public.vendors(id),
  CONSTRAINT order_items_vendor_product_id_fkey FOREIGN KEY (vendor_product_id) REFERENCES public.vendor_products(id),
  CONSTRAINT order_items_vendor_generic_product_id_fkey FOREIGN KEY (vendor_generic_product_id) REFERENCES public.vendor_generic_products(id),
  CONSTRAINT order_items_smartphone_model_id_fkey FOREIGN KEY (smartphone_model_id) REFERENCES public.smartphone_models(id)
);
CREATE TABLE public.order_pickups (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  order_id uuid,
  vendor_id uuid NOT NULL,
  delivery_partner_id uuid NOT NULL,
  pickup_status character varying DEFAULT 'pending'::character varying CHECK (pickup_status::text = ANY (ARRAY['pending'::character varying, 'en_route'::character varying, 'picked_up'::character varying, 'failed'::character varying]::text[])),
  pickup_time timestamp with time zone,
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT order_pickups_pkey PRIMARY KEY (id),
  CONSTRAINT order_pickups_order_id_fkey FOREIGN KEY (order_id) REFERENCES public.orders(id)
);
CREATE TABLE public.orders (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  order_number character varying NOT NULL UNIQUE,
  customer_id uuid NOT NULL,
  subtotal numeric NOT NULL,
  shipping_charges numeric DEFAULT 0,
  tax_amount numeric DEFAULT 0,
  discount_amount numeric DEFAULT 0,
  total_amount numeric NOT NULL,
  order_status character varying NOT NULL DEFAULT 'pending'::character varying CHECK (order_status::text = ANY (ARRAY['pending'::character varying, 'confirmed'::character varying, 'processing'::character varying, 'packed'::character varying, 'picked_up'::character varying, 'out_for_delivery'::character varying, 'delivered'::character varying, 'cancelled'::character varying, 'returned'::character varying, 'refunded'::character varying]::text[])),
  payment_status character varying NOT NULL DEFAULT 'pending'::character varying CHECK (payment_status::text = ANY (ARRAY['pending'::character varying, 'processing'::character varying, 'paid'::character varying, 'failed'::character varying, 'refunded'::character varying, 'partially_refunded'::character varying]::text[])),
  payment_method character varying,
  payment_id character varying,
  estimated_delivery_date date,
  actual_delivery_date timestamp with time zone,
  delivery_instructions text,
  preferred_delivery_time timestamp with time zone,
  delivery_attempts integer DEFAULT 0,
  last_delivery_attempt timestamp with time zone,
  special_instructions text,
  notes text,
  cancelled_date timestamp with time zone,
  cancellation_reason text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  slot_id uuid,
  sector_id uuid,
  delivery_date date,
  pickup_time timestamp with time zone,
  out_for_delivery_time timestamp with time zone,
  estimated_delivery_time timestamp with time zone,
  delivery_address_id uuid,
  picked_up_date timestamp without time zone,
  CONSTRAINT orders_pkey PRIMARY KEY (id),
  CONSTRAINT orders_delivery_address_id_fkey FOREIGN KEY (delivery_address_id) REFERENCES public.customer_addresses(id),
  CONSTRAINT orders_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES public.customers(id),
  CONSTRAINT orders_slot_id_fkey FOREIGN KEY (slot_id) REFERENCES public.delivery_slots(id),
  CONSTRAINT orders_sector_id_fkey FOREIGN KEY (sector_id) REFERENCES public.sectors(id)
);
CREATE TABLE public.payouts (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  payout_number character varying NOT NULL UNIQUE,
  recipient_type character varying NOT NULL CHECK (recipient_type::text = ANY (ARRAY['vendor'::character varying, 'delivery_partner'::character varying]::text[])),
  recipient_id uuid NOT NULL,
  payout_amount numeric NOT NULL,
  payout_method character varying NOT NULL CHECK (payout_method::text = ANY (ARRAY['bank_transfer'::character varying, 'upi'::character varying, 'cash'::character varying, 'cheque'::character varying]::text[])),
  payout_status character varying NOT NULL DEFAULT 'pending'::character varying CHECK (payout_status::text = ANY (ARRAY['pending'::character varying, 'processing'::character varying, 'completed'::character varying, 'failed'::character varying, 'cancelled'::character varying]::text[])),
  period_start timestamp with time zone NOT NULL,
  period_end timestamp with time zone NOT NULL,
  included_transactions ARRAY DEFAULT '{}'::text[],
  transaction_count integer DEFAULT 0,
  processed_by uuid,
  payment_reference character varying,
  bank_details jsonb,
  scheduled_date timestamp with time zone,
  processed_date timestamp with time zone,
  completed_date timestamp with time zone,
  notes text,
  metadata jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT payouts_pkey PRIMARY KEY (id),
  CONSTRAINT payouts_processed_by_fkey FOREIGN KEY (processed_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.platform_wallet (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  total_commission_earned numeric DEFAULT 0,
  total_transaction_fees numeric DEFAULT 0,
  total_refunds_processed numeric DEFAULT 0,
  total_operational_costs numeric DEFAULT 0,
  today_commission numeric DEFAULT 0,
  week_commission numeric DEFAULT 0,
  month_commission numeric DEFAULT 0,
  year_commission numeric DEFAULT 0,
  total_transactions_processed integer DEFAULT 0,
  today_transactions integer DEFAULT 0,
  week_transactions integer DEFAULT 0,
  month_transactions integer DEFAULT 0,
  last_updated timestamp with time zone DEFAULT now(),
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT platform_wallet_pkey PRIMARY KEY (id)
);
CREATE TABLE public.profiles (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid UNIQUE,
  email text NOT NULL,
  role text NOT NULL CHECK (role = ANY (ARRAY['customer'::text, 'vendor'::text, 'delivery_partner'::text, 'admin'::text])),
  full_name text,
  phone character varying,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT profiles_pkey PRIMARY KEY (id),
  CONSTRAINT profiles_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);

CREATE TABLE public.sectors (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  city_name character varying NOT NULL,
  name character varying NOT NULL,
  pincodes ARRAY NOT NULL DEFAULT '{}'::integer[],
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT sectors_pkey PRIMARY KEY (id)
);

  create index IF not exists idx_sectors_city_active on public.sectors using btree (city_name, is_active) TABLESPACE pg_default;

  create index IF not exists idx_sectors_pincodes on public.sectors using gin (pincodes) TABLESPACE pg_default;

  create trigger update_sectors_updated_at BEFORE
  update on sectors for EACH row
  execute FUNCTION update_updated_at_column ();



CREATE TABLE public.shopping_carts (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  customer_id uuid NOT NULL UNIQUE,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT shopping_carts_pkey PRIMARY KEY (id),
  CONSTRAINT shopping_carts_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES public.customers(id)
);
CREATE TABLE public.smartphone_models (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  brand_id uuid NOT NULL,
  model_name character varying NOT NULL,
  model_number character varying,
  release_year integer,
  base_price numeric,
  specifications jsonb,
  official_images ARRAY,
  description text,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT smartphone_models_pkey PRIMARY KEY (id),
  CONSTRAINT smartphone_models_brand_id_fkey FOREIGN KEY (brand_id) REFERENCES public.brands(id)
);
CREATE TABLE public.spatial_ref_sys (
  srid integer NOT NULL CHECK (srid > 0 AND srid <= 998999),
  auth_name character varying,
  auth_srid integer,
  srtext character varying,
  proj4text character varying,
  CONSTRAINT spatial_ref_sys_pkey PRIMARY KEY (srid)
);
CREATE TABLE public.transactions (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  transaction_number character varying NOT NULL UNIQUE,
  order_id uuid NOT NULL,
  order_item_id uuid,
  transaction_type character varying NOT NULL CHECK (transaction_type::text = ANY (ARRAY['order_payment'::character varying, 'commission_deduction'::character varying, 'vendor_earning'::character varying, 'delivery_incentive'::character varying, 'delivery_salary'::character varying, 'refund'::character varying, 'penalty'::character varying, 'bonus'::character varying, 'adjustment'::character varying]::text[])),
  transaction_status character varying NOT NULL DEFAULT 'pending'::character varying CHECK (transaction_status::text = ANY (ARRAY['pending'::character varying, 'processed'::character varying, 'completed'::character varying, 'failed'::character varying, 'cancelled'::character varying]::text[])),
  gross_amount numeric NOT NULL,
  commission_amount numeric DEFAULT 0,
  net_amount numeric NOT NULL,
  tax_amount numeric DEFAULT 0,
  from_party_type character varying CHECK (from_party_type::text = ANY (ARRAY['customer'::character varying, 'vendor'::character varying, 'delivery_partner'::character varying, 'platform'::character varying]::text[])),
  from_party_id uuid,
  to_party_type character varying CHECK (to_party_type::text = ANY (ARRAY['customer'::character varying, 'vendor'::character varying, 'delivery_partner'::character varying, 'platform'::character varying]::text[])),
  to_party_id uuid,
  commission_rule_id uuid,
  commission_override_id uuid,
  commission_rate_used numeric,
  transaction_date timestamp with time zone DEFAULT now(),
  processed_at timestamp with time zone,
  completed_at timestamp with time zone,
  description text,
  metadata jsonb,
  payment_method character varying,
  payment_reference character varying,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT transactions_pkey PRIMARY KEY (id),
  CONSTRAINT transactions_order_id_fkey FOREIGN KEY (order_id) REFERENCES public.orders(id),
  CONSTRAINT transactions_order_item_id_fkey FOREIGN KEY (order_item_id) REFERENCES public.order_items(id)
);
CREATE TABLE public.vendor_addresses (
  vendor_id uuid NOT NULL,
  company_name text NOT NULL,
  pincode character varying NOT NULL,
  address_box text NOT NULL,
  phone_number1 character varying NOT NULL,
  phone_number2 character varying,
  phone_number3 character varying,
  phone_number4 character varying,
  phone_number5 character varying,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT vendor_addresses_pkey PRIMARY KEY (vendor_id),
  CONSTRAINT vendor_addresses_vendor_id_fkey FOREIGN KEY (vendor_id) REFERENCES public.vendors(id)
);
CREATE TABLE public.vendor_commission_overrides (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  vendor_id uuid NOT NULL,
  category_id uuid NOT NULL,
  commission_percentage numeric NOT NULL CHECK (commission_percentage >= 0::numeric AND commission_percentage <= 100::numeric),
  minimum_commission numeric DEFAULT 0,
  maximum_commission numeric,
  is_active boolean DEFAULT true,
  effective_from timestamp with time zone DEFAULT now(),
  effective_until timestamp with time zone,
  created_by uuid,
  reason text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  quality_id uuid,
  smartphone_model_id uuid,
  CONSTRAINT vendor_commission_overrides_pkey PRIMARY KEY (id),
  CONSTRAINT vendor_commission_overrides_vendor_id_fkey FOREIGN KEY (vendor_id) REFERENCES public.vendors(id),
  CONSTRAINT vendor_commission_overrides_category_id_fkey FOREIGN KEY (category_id) REFERENCES public.categories(id),
  CONSTRAINT vendor_commission_overrides_quality_id_fkey FOREIGN KEY (quality_id) REFERENCES public.category_qualities(id),
  CONSTRAINT vendor_commission_overrides_smartphone_model_id_fkey FOREIGN KEY (smartphone_model_id) REFERENCES public.smartphone_models(id),
  CONSTRAINT vendor_commission_overrides_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.vendor_commissions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  vendor_id uuid NOT NULL,
  quality_id uuid NOT NULL,
  commission_rate numeric NOT NULL CHECK (commission_rate >= 0::numeric AND commission_rate <= 100::numeric),
  upside_rate numeric DEFAULT 0 CHECK (upside_rate >= 0::numeric AND upside_rate <= 100::numeric),
  is_active boolean DEFAULT true,
  effective_from timestamp with time zone DEFAULT now(),
  effective_until timestamp with time zone,
  created_by uuid,
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT vendor_commissions_pkey PRIMARY KEY (id),
  CONSTRAINT vendor_commissions_vendor_id_fkey FOREIGN KEY (vendor_id) REFERENCES public.vendors(id),
  CONSTRAINT vendor_commissions_quality_id_fkey FOREIGN KEY (quality_id) REFERENCES public.category_qualities(id),
  CONSTRAINT vendor_commissions_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.vendor_generic_products (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  vendor_id uuid NOT NULL,
  generic_product_id uuid NOT NULL,
  quality_type_id uuid NOT NULL,
  price numeric NOT NULL CHECK (price > 0::numeric),
  original_price numeric,
  discount_percentage integer DEFAULT 0,
  stock_quantity integer NOT NULL DEFAULT 0,
  is_in_stock boolean DEFAULT true,
  low_stock_threshold integer DEFAULT 5,
  warranty_months integer DEFAULT 0,
  delivery_time_days integer DEFAULT 3,
  product_images ARRAY,
  specifications jsonb,
  vendor_notes text,
  is_active boolean DEFAULT true,
  featured boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT vendor_generic_products_pkey PRIMARY KEY (id),
  CONSTRAINT vendor_generic_products_quality_type_id_fkey FOREIGN KEY (quality_type_id) REFERENCES public.category_qualities(id),
  CONSTRAINT vendor_generic_products_generic_product_id_fkey FOREIGN KEY (generic_product_id) REFERENCES public.generic_products(id),
  CONSTRAINT vendor_generic_products_vendor_id_fkey FOREIGN KEY (vendor_id) REFERENCES public.vendors(id)
);
CREATE TABLE public.vendor_products (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  vendor_id uuid NOT NULL,
  model_id uuid NOT NULL,
  category_id uuid NOT NULL,
  quality_type_id uuid NOT NULL,
  price numeric NOT NULL CHECK (price > 0::numeric),
  original_price numeric,
  discount_percentage integer DEFAULT 0,
  stock_quantity integer NOT NULL DEFAULT 0,
  is_in_stock boolean DEFAULT true,
  low_stock_threshold integer DEFAULT 5,
  warranty_months integer DEFAULT 0,
  delivery_time_days integer DEFAULT 3,
  specifications jsonb,
  vendor_notes text,
  is_active boolean DEFAULT true,
  featured boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT vendor_products_pkey PRIMARY KEY (id),
  CONSTRAINT vendor_products_model_id_fkey FOREIGN KEY (model_id) REFERENCES public.smartphone_models(id),
  CONSTRAINT vendor_products_quality_type_id_fkey FOREIGN KEY (quality_type_id) REFERENCES public.category_qualities(id),
  CONSTRAINT vendor_products_vendor_id_fkey FOREIGN KEY (vendor_id) REFERENCES public.vendors(id),
  CONSTRAINT vendor_products_category_id_fkey FOREIGN KEY (category_id) REFERENCES public.categories(id)
);
CREATE TABLE public.vendor_wallets (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  vendor_id uuid NOT NULL UNIQUE,
  pending_balance numeric DEFAULT 0,
  available_balance numeric DEFAULT 0,
  reserved_balance numeric DEFAULT 0,
  total_earned numeric DEFAULT 0,
  total_paid_out numeric DEFAULT 0,
  today_earnings numeric DEFAULT 0,
  week_earnings numeric DEFAULT 0,
  month_earnings numeric DEFAULT 0,
  total_commission_paid numeric DEFAULT 0,
  average_commission_rate numeric DEFAULT 0,
  minimum_payout_amount numeric DEFAULT 1000,
  auto_payout_enabled boolean DEFAULT false,
  payout_frequency character varying DEFAULT 'weekly'::character varying CHECK (payout_frequency::text = ANY (ARRAY['daily'::character varying, 'weekly'::character varying, 'monthly'::character varying]::text[])),
  last_payout_date timestamp with time zone,
  last_transaction_date timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT vendor_wallets_pkey PRIMARY KEY (id),
  CONSTRAINT vendor_wallets_vendor_id_fkey FOREIGN KEY (vendor_id) REFERENCES public.vendors(id)
);
CREATE TABLE public.vendors (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  profile_id uuid NOT NULL UNIQUE,
  business_name character varying NOT NULL,
  business_registration character varying,
  gstin character varying,
  business_email character varying,
  rating numeric DEFAULT 0.00 CHECK (rating >= 0::numeric AND rating <= 5::numeric),
  total_reviews integer DEFAULT 0,
  total_sales integer DEFAULT 0,
  is_verified boolean DEFAULT false,
  is_active boolean DEFAULT true,
  auto_approve_orders boolean DEFAULT false,
  order_confirmation_timeout_minutes integer DEFAULT 15,
  auto_approve_under_amount numeric,
  business_hours_start time without time zone DEFAULT '09:00:00'::time without time zone,
  business_hours_end time without time zone DEFAULT '18:00:00'::time without time zone,
  auto_approve_during_business_hours_only boolean DEFAULT true,
  joined_at timestamp with time zone DEFAULT now(),
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT vendors_pkey PRIMARY KEY (id),
  CONSTRAINT vendors_profile_id_fkey FOREIGN KEY (profile_id) REFERENCES public.profiles(id)
);